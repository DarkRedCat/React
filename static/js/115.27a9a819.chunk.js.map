{"version":3,"file":"static/js/115.27a9a819.chunk.js","mappings":"wMACA,GAAgB,eAAiB,gCAAgC,OAAS,wBAAwB,iBAAmB,mC,SCsBrH,EApBgB,SAACA,GAEf,IAAIC,EAAOD,EAAME,YAAYC,KAAI,SAAAC,GAC7B,GAAGJ,EAAMK,KAAQD,EAAEC,GACjB,OACE,eAAeC,UAAS,UAAKC,EAAAA,eAAL,IAA+B,kBAAvD,UACE,UAAC,KAAD,CAAUD,UAAW,SAAAE,GAAO,OAAIA,EAAQC,SAAWF,EAAAA,OAAiBA,EAAAA,MAChEG,GAAE,oBAAeV,EAAMW,KAD3B,WAEI,gBAAKL,UAAWC,EAAAA,iBAAhB,UACI,gBAAKK,IAAKR,EAAES,OAAQC,IAAI,SAE5B,yBAAMV,EAAEW,WANLX,EAAEC,OAYnB,OAAO,yBAAMJ,KCnBf,GAAgB,SAAW,2BAA2B,gBAAkB,mCCgBxE,EAbiB,SAACD,GACd,IAAIgB,EAAkB,CAAC,EAAE,EAAE,GAC1Bb,KAAK,SAAAc,GAAC,OAAI,SAAC,EAAD,CAAiBZ,GAAIY,EAAGf,YAAaF,EAAMkB,MAAMC,mBAAmBC,aAAcT,IAAG,aAAQM,IAA/EA,MAEzB,OACI,iBAAKX,UAAWC,EAAAA,SAAhB,WACI,eAAID,UAAWC,EAAAA,gBAAf,sBACA,eAAID,UAAWC,EAAAA,KAAf,SACKS,Q,uCCXjB,EAA6B,8BAA7B,EAAsE,4BAAtE,EAAyG,wBC4BzG,EAtBgB,SAAChB,GACb,IAAMqB,EAAoBC,EAAAA,KAAaC,MAAM,CAACC,SAAWF,EAAAA,OAEzD,OACI,gBAAKhB,UAAWC,EAAhB,UACI,SAAC,KAAD,CAAQkB,cAAe,CAAED,SAAW,IAAKE,gBAAc,EACnDC,SAAU,SAACC,GAJN,IAACC,EAI8C,MAJ1B,MAApBA,EAI4BD,EAAOJ,WAJPxB,EAAM8B,MAAMC,aAAa/B,EAAMK,GAAGA,GAAGwB,GAIXD,EAAOJ,SAAW,IAC9EQ,iBAAkBX,EAFtB,SAGK,YAAiE,IAA/DO,EAA8D,EAA9DA,OAAOK,EAAuD,EAAvDA,aAAaC,EAA0C,EAA1CA,WAAWC,EAA+B,EAA/BA,QAAQC,EAAuB,EAAvBA,aAAaC,EAAU,EAAVA,MAAW,OAC9D,iCACI,qBAAU/B,UAAWC,EAAkB+B,KAAI,OAAUvB,KAAI,WACrDwB,SAAUN,EAAcO,OAASN,EAAYO,MAAOb,EAAOJ,YAC/D,mBAAQlB,UAAWC,EAAcmC,UAAWP,IAAYE,EACpDM,QAASP,EAAcE,KAAI,SAD/B,2BClBxB,EAA0B,yBAA1B,EAA0D,sBAA1D,EAAuF,sBAAvF,EAAyH,2BAAzH,EAA6J,wBAA7J,EAA2L,qBCkD3L,EAhDgB,SAACtC,GAEb,IAGI4C,EAHe5C,EAAM8B,MAAMX,mBAAmB0B,QAGjB,MAAQ7C,EAAMkB,MAAMb,IAAIF,KAAI,SAAAC,GACzD,MAAa,WAATA,EAAE,IACK,iBAAgBE,UAAWC,EAA3B,WACH,gBAAKD,UAAWC,EAAhB,UACI,gBAAKK,IAAI,yDAAyDE,IAAI,SAG1E,iBAAKR,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,kBADJ,UAIQH,EAAE,SATGA,EAAE,IAcV,aAATA,EAAE,IACK,iBAAgBE,UAAS,UAAKC,EAAL,YAAwBA,GAAjD,WAEH,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,mBACQP,EAAMkB,MAAMH,QAFxB,UAIQX,EAAE,QAEV,gBAAKE,UAAWC,EAAhB,UACI,gBAAKK,IAAG,UAAKZ,EAAMkB,MAAML,QAAUC,IAAI,UAT9BV,EAAE,SADvB,KAgBJ,OACI,4BACI,gBAAKE,UAAWC,EAAhB,SACKqC,KAEL,SAACE,EAAD,CAAWzC,GAAIL,EAAMkB,MAAOY,MAAO9B,EAAM8B,YC5CrD,EAAiC,iCCsBjC,EAfiB,SAAC9B,GAEd,IAAI+C,EAAkB/C,EAAMkB,MAAMC,mBAAmBC,aAChDjB,KAAI,SAAAC,GAAC,OAAI,SAAC,KAAD,CACK4C,KAAI,aAAQ5C,EAAEC,GAAV,MACf4C,SAAS,SAAE,EAAF,CAAU/B,MAASd,EAAG0B,MAAO9B,EAAMkB,SADvCd,EAAEC,OAGf,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,UACKwC,OCjBjB,EAAkC,wCCalC,EATuB,SAAC/C,GAEpB,OACI,iBAAKM,UAAWC,EAAhB,WACI,SAAC,EAAD,CAAUW,MAAOlB,KACjB,SAAC,EAAD,CAAUkB,MAAOlB,QCI7B,GAF8BkD,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAHhB,SAACjC,GAAW,MAAO,CAACC,mBAAoBD,EAAMC,uBAC3C,SAACiC,GAAc,MAAO,CAACrB,aAAc,SAAC1B,EAAGwB,GAAUuB,GAASC,EAAAA,EAAAA,GAAWhD,EAAGwB,SAEhByB,EAAAA,EAArDJ,CAAuEK","sources":["webpack://my-app/./src/components/Page_body/Block_Messages/Contacts/Contact/Contact.module.css?f9ec","components/Page_body/Block_Messages/Contacts/Contact/Contact.jsx","webpack://my-app/./src/components/Page_body/Block_Messages/Contacts/Contacts.module.css?98a1","components/Page_body/Block_Messages/Contacts/Contacts.jsx","webpack://my-app/./src/components/Page_body/Block_Messages/Messages/Message/SendBlock/SendBlock.module.css?0159","components/Page_body/Block_Messages/Messages/Message/SendBlock/SendBlock.jsx","webpack://my-app/./src/components/Page_body/Block_Messages/Messages/Message/Message.module.css?eaf7","components/Page_body/Block_Messages/Messages/Message/Message.jsx","webpack://my-app/./src/components/Page_body/Block_Messages/Messages/Messages.module.css?7907","components/Page_body/Block_Messages/Messages/Messages.jsx","webpack://my-app/./src/components/Page_body/Block_Messages/Block_Messages.module.css?d7de","components/Page_body/Block_Messages/Block_Messages.jsx","components/Page_body/Block_Messages/Block_MessagesContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"Contact_contacts__item__+gfs0\",\"active\":\"Contact_active__o9MaU\",\"contacts__avatar\":\"Contact_contacts__avatar__l-dtB\"};","import {NavLink} from 'react-router-dom';\r\nimport classes from './Contact.module.css';\r\n\r\nconst Contact = (props) => {\r\n\r\n  let nav  = props.contactInfo.map(m =>{\r\n      if(props.id ===  m.id){\r\n        return(\r\n          <li key={m.id} className={`${classes.contacts__item} ${'contacts__item'}`}>\r\n            <NavLink  className={navData => navData.isActive ? classes.active : classes.item} \r\n                to={`/messages/${props.url}`}>\r\n                <div className={classes.contacts__avatar}>\r\n                    <img src={m.avatar} alt='1'/>\r\n                </div>\r\n                <div>{m.name}</div>\r\n            </NavLink>\r\n          </li>\r\n        )\r\n      }\r\n  })\r\n  return <div>{nav}</div>\r\n}\r\n\r\nexport default Contact;","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__Is8L2\",\"contacts__title\":\"Contacts_contacts__title__6Xi+h\"};","import Contact from \"./Contact/Contact\"\r\nimport classes from './Contacts.module.css';\r\n\r\n\r\nconst Contacts = (props) => {\r\n    let contactElements = [2,3,4]\r\n    .map( p => <Contact key={p} id={p} contactInfo={props.state.block_MessagesPage.contact_data} url={`id_${p}`}/>  )\r\n\r\n    return (\r\n        <div className={classes.contacts}>\r\n            <h1 className={classes.contacts__title}>dialogs</h1>\r\n            <ul className={classes.list}>\r\n                {contactElements} \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Contacts;","// extracted by mini-css-extract-plugin\nexport default {\"send_block\":\"SendBlock_send_block__afGpj\",\"textarea\":\"SendBlock_textarea__iLgih\",\"send\":\"SendBlock_send__z08Bj\"};","\r\nimport React from 'react';\r\nimport {Formik } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\nimport classes from './SendBlock.module.css';\r\n\r\nconst Message = (props) => {\r\n    const validationsSchema = yup.object().shape({textarea : yup.string()})\r\n    let addMessage = (text) => {(text !== '') &&  props.store.onAddMessage(props.id.id,text)}\r\n    return (\r\n        <div className={classes.send_block}>\r\n            <Formik initialValues={{ textarea : ''}} validateOnBlur \r\n                onSubmit={(values) => {addMessage(values.textarea) ;return (values.textarea = '')}}\r\n                validationSchema={validationsSchema}>\r\n                {({values,handleChange,handleBlur,isValid,handleSubmit,dirty}) =>{return(\r\n                    <>\r\n                        <textarea className={classes.textarea} type={`text`} name={`textarea`} \r\n                            onChange={handleChange} onBlur= {handleBlur} value={values.textarea}/>  \r\n                        <button className={classes.send} disabled={!isValid && !dirty} \r\n                            onClick={handleSubmit} type={`button`} >Send</button>\r\n                    </> \r\n                )}}\r\n            </Formik> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__o1vFp\",\"text\":\"Message_text__MnhJl\",\"name\":\"Message_name__RlHpl\",\"Mymessage\":\"Message_Mymessage__NlwIB\",\"avatar\":\"Message_avatar__1DWhJ\",\"ssd\":\"Message_ssd__Z5zGt\"};","import SendBlock from './SendBlock/SendBlock';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n  \r\n    let propsMessage = props.store.block_MessagesPage.message\r\n\r\n\r\n    let messageItems =  propsMessage['id_' + props.state.id].map(m => {\r\n        if (m[0] === 'Posted') \r\n            return <div key={m[1]} className={classes.message}>\r\n                <div className={classes.avatar}>\r\n                    <img src=\"https://via.placeholder.com/100/000000/FF0000?text=WTF\" alt='1'/>\r\n                </div>\r\n\r\n                <div className={classes.text}>\r\n                    <div className={classes.name}>\r\n                        cyka\r\n                    </div>\r\n                    {`${m[2]}`}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        if (m[0] === 'obtained') \r\n            return <div key={m[1]} className={`${classes.message} ${classes.Mymessage}`}>\r\n\r\n                <div className={classes.text}>\r\n                    <div className={classes.name}>\r\n                        {`${props.state.name}`}\r\n                    </div>\r\n                    {`${m[2]}`}\r\n                </div>\r\n                <div className={classes.avatar}>\r\n                    <img src={`${props.state.avatar}`} alt='1'/>\r\n                </div>\r\n            </div>\r\n\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.ssd}>\r\n                {messageItems}\r\n            </div >\r\n            <SendBlock id={props.state} store={props.store} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"block__message\":\"Messages_block__message__8xldA\"};","import React from 'react';\r\nimport {Routes, Route} from \"react-router-dom\"\r\n\r\nimport Message from './Message/Message';\r\n\r\nimport classes from './Messages.module.css';\r\n\r\n\r\nconst Messages = (props) => {\r\n   \r\n    let messageElements = props.state.block_MessagesPage.contact_data\r\n        .map(m => <Route\r\n            key={m.id} path={`id_${m.id}/*`}\r\n            element={< Message state = {m} store={props.state} />}/>)\r\n\r\n    return (\r\n        <div className={classes.block__message}>\r\n            <Routes>\r\n                {messageElements}\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\nexport default Messages;","// extracted by mini-css-extract-plugin\nexport default {\"messages__block\":\"Block_Messages_messages__block__8MNc9\"};","import Contacts from './Contacts/Contacts'\r\nimport Messages from \"./Messages/Messages\";\r\n\r\nimport classes from './Block_Messages.module.css';\r\n\r\nconst Block_Messages = (props) => {\r\n\r\n    return (\r\n        <div className={classes.messages__block}>\r\n            <Contacts state={props}/>\r\n            <Messages state={props} />\r\n        </div>\r\n    )\r\n}\r\nexport default Block_Messages;","import {connect} from 'react-redux'\r\nimport { compose } from 'redux';\r\nimport {addMessage} from '../../../redux/reducer/blockMessages-reducer' \r\nimport {withAuthRedirect} from '../../../hoc/withAuthRedirect'\r\n\r\nimport Block_Messages from \"./Block_Messages\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {return {block_MessagesPage: state.block_MessagesPage,}}\r\nlet mapDispatchToProps = (dispatch) => {return {onAddMessage: (id,text) => {dispatch(addMessage(id,text))}}}\r\n\r\nlet Block_MessagesContainer = compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Block_Messages)\r\n\r\nexport default  Block_MessagesContainer\r\n\r\n"],"names":["props","nav","contactInfo","map","m","id","className","classes","navData","isActive","to","url","src","avatar","alt","name","contactElements","p","state","block_MessagesPage","contact_data","validationsSchema","yup","shape","textarea","initialValues","validateOnBlur","onSubmit","values","text","store","onAddMessage","validationSchema","handleChange","handleBlur","isValid","handleSubmit","dirty","type","onChange","onBlur","value","disabled","onClick","messageItems","message","SendBlock","messageElements","path","element","compose","connect","dispatch","addMessage","withAuthRedirect","Block_Messages"],"sourceRoot":""}